

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Xonic의 블로그</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-05-27T17:25:16+09:00</updated>
  <author>
    <name>lee seung woo</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 lee seung woo </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>HEIC 포맷을 JPG 로 CLI 를 통해서 변경하기</title>
    <link href="http://localhost:4000/posts/HEIC-%ED%8F%AC%EB%A7%B7%EC%9D%84-JPG-%EB%A1%9C-%EB%B3%80%EA%B2%BD-%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="HEIC 포맷을 JPG 로 CLI 를 통해서 변경하기" />
    <published>2024-05-27T00:00:00+09:00</published>
  
    <updated>2024-05-27T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/HEIC-%ED%8F%AC%EB%A7%B7%EC%9D%84-JPG-%EB%A1%9C-%EB%B3%80%EA%B2%BD-%ED%95%98%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/HEIC-%ED%8F%AC%EB%A7%B7%EC%9D%84-JPG-%EB%A1%9C-%EB%B3%80%EA%B2%BD-%ED%95%98%EA%B8%B0/" />
    <author>
      <name>lee seung woo</name>
    </author>

  
    
  

  <summary>HEIC 포맷을 JPG 로 변경하기
가끔 아이폰으로 찍은 사진을 맥북에 에어드롭으로 전송하면 HEIC 포맷으로 저장되는 경우가 있다. 이런 경우, HEIC 포맷을 JPG 로 변경하고 싶을 때가 있다. 이때 CLI 를 사용하면 편리하게 변경할 수 있다.
# HEIC 포맷을 JPG 로 변경
sips -s format jpeg -s formatOptions best image.heic --out image.jpg

이렇게 하면 image.heic 파일이 image.jpg 로 변경 된다.

HEIC 포맷은?
HEIC(High Efficiency Image Container)는 고효율 이미지 파일 포맷으로, HEIF(High Efficiency Image Format) 표준을 따른다.
HEIF는 MPEG(Mov...</summary>

  </entry>

  
  <entry>
    <title>개발자라면 Decimal과 부동소수점은 알아야지?</title>
    <link href="http://localhost:4000/posts/%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%9D%BC%EB%A9%B4-%EA%BC%AD-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-Decimal-%EB%8F%88-%EA%B3%84%EC%82%B0,-%EC%A0%9C%EB%8C%80%EB%A1%9C-%ED%95%98%EC%9E%90!/" rel="alternate" type="text/html" title="개발자라면 Decimal과 부동소수점은 알아야지?" />
    <published>2024-05-23T00:00:00+09:00</published>
  
    <updated>2024-05-23T16:55:57+09:00</updated>
  
    <id>http://localhost:4000/posts/%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%9D%BC%EB%A9%B4-%EA%BC%AD-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-Decimal-%EB%8F%88-%EA%B3%84%EC%82%B0,-%EC%A0%9C%EB%8C%80%EB%A1%9C-%ED%95%98%EC%9E%90!/</id>
    <content src="http://localhost:4000/posts/%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%9D%BC%EB%A9%B4-%EA%BC%AD-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-Decimal-%EB%8F%88-%EA%B3%84%EC%82%B0,-%EC%A0%9C%EB%8C%80%EB%A1%9C-%ED%95%98%EC%9E%90!/" />
    <author>
      <name>lee seung woo</name>
    </author>

  
    
  

  <summary>부동소수점 함정에 주의

금융 애플리케이션 개발 시, 정확한 계산 로직 구현은 필수 불가결하다. 부동소수점 자료형(Float, Double)은 근사치 계산으로 인해 금융 계산에 적합하지 않다. Decimal을 사용하여 이 문제를 해결하고 정확한 계산을 보장해야 한다.

부동소수점 함정: IEEE 754 표준의 한계

대부분의 프로그래밍 언어는 부동소수점 표현에 IEEE 754 표준을 따른다. 64비트 double precision은 부호(1비트), 지수(11비트), 가수(52비트)로 구성된다.

  32비트 single precision은 64비트에 비해 표현 가능한 비트수가 절반이므로 정밀도가 상대적으로 떨어진다.


예를 들어 0.1을 double precision 부동소수점으로 표현하면 다음과 같...</summary>

  </entry>

  
  <entry>
    <title>H264 표준 코덱과 구현체</title>
    <link href="http://localhost:4000/posts/H264-%ED%91%9C%EC%A4%80-%EC%BD%94%EB%8D%B1%EA%B3%BC-%EA%B5%AC%ED%98%84%EC%B2%B4/" rel="alternate" type="text/html" title="H264 표준 코덱과 구현체" />
    <published>2024-05-17T00:00:00+09:00</published>
  
    <updated>2024-05-17T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/H264-%ED%91%9C%EC%A4%80-%EC%BD%94%EB%8D%B1%EA%B3%BC-%EA%B5%AC%ED%98%84%EC%B2%B4/</id>
    <content src="http://localhost:4000/posts/H264-%ED%91%9C%EC%A4%80-%EC%BD%94%EB%8D%B1%EA%B3%BC-%EA%B5%AC%ED%98%84%EC%B2%B4/" />
    <author>
      <name>lee seung woo</name>
    </author>

  
    
  

  <summary>FMPEG.wasm 라이브러리


  장점
    
      클라이언트 사이드에서 동작 (클라이언트 리소스를 사용해서 동영상을 인코딩하거나 디코딩)
      단일 쓰레드와 멀티 쓰레드를 같이 제공하므로 상황에 맞는 것을 선택 가능
      그 외 장점들이 표현되어 있네요.
    
  
  우선,  ffmpeg의 h264는 내부적으로 **x264를 사용하게 됩니다.*
  참고로 x264는 videolan 에서 h264 스펙을 구현한 라이브러리를 사용합니다.
=&amp;amp;gt; 참고 링크: https://superuser.com/questions/1587136/what-is-the-different-of-h264-and-libx264


openH264 vs. x264


  라이선스:
    
      ...</summary>

  </entry>

  
  <entry>
    <title>스타트업에 대한 나의 생각</title>
    <link href="http://localhost:4000/posts/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85%EC%97%90-%EB%8C%80%ED%95%9C-%EB%82%98%EC%9D%98-%EC%83%9D%EA%B0%81/" rel="alternate" type="text/html" title="스타트업에 대한 나의 생각" />
    <published>2024-05-06T00:00:00+09:00</published>
  
    <updated>2024-05-16T16:26:32+09:00</updated>
  
    <id>http://localhost:4000/posts/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85%EC%97%90-%EB%8C%80%ED%95%9C-%EB%82%98%EC%9D%98-%EC%83%9D%EA%B0%81/</id>
    <content src="http://localhost:4000/posts/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85%EC%97%90-%EB%8C%80%ED%95%9C-%EB%82%98%EC%9D%98-%EC%83%9D%EA%B0%81/" />
    <author>
      <name>lee seung woo</name>
    </author>

  
    
    <category term="내생각" />
    
  

  <summary>회사 상황
최근 회사 상황이 좋지 않아서 사업팀이 해체되었습니다.
우리 회사는 최근 결정되어 있던 투자를 받지 못했습니다.
그래서 자금 부족 문제로 인해 일부 인력이 이직해야 한다는 얘기가 나왔습니다.
하지만 자금이 얼마나 부족하고 왜 사람들이 떠나야 하는지에 대해서는 팀원들에게 자세히 공개되지 않았습니다.
저는 이 회사에서 이미 21개월을 근무했지만, 여전히 회사의 방향이나 목표가 뚜렷하지 않다는 느낌을 받고 있습니다.
이런 상황에서는 공유와 소통이 소홀히 되고 있다는 느낌을 받습니다.

본인이 생각하는 스타트업의 특성
그렇다면 이 회사는 진정한 스타트업일까요?
제가 알고 있는 스타트업은 빠르게 실험하고 적극적으로 도전하는 환경을 갖추고 있습니다.
빠른 시도와 실패를 통해 배우는 문화가 정착되어 있죠...</summary>

  </entry>

  
  <entry>
    <title>대규모 시스템 설계 기초 - 사용자 수에 따른 규모 확장성</title>
    <link href="http://localhost:4000/posts/%EB%8C%80%EA%B7%9C%EB%AA%A8-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84-%EA%B8%B0%EC%B4%88/" rel="alternate" type="text/html" title="대규모 시스템 설계 기초 - 사용자 수에 따른 규모 확장성" />
    <published>2024-04-19T00:00:00+09:00</published>
  
    <updated>2024-05-06T21:06:37+09:00</updated>
  
    <id>http://localhost:4000/posts/%EB%8C%80%EA%B7%9C%EB%AA%A8-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84-%EA%B8%B0%EC%B4%88/</id>
    <content src="http://localhost:4000/posts/%EB%8C%80%EA%B7%9C%EB%AA%A8-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84-%EA%B8%B0%EC%B4%88/" />
    <author>
      <name>lee seung woo</name>
    </author>

  
    
    <category term="책읽기" />
    
    <category term="대규모 시스템 설계 기초" />
    
  

  <summary>대규모 시스템 설계 기초
내가 어느정도 알고 있는지 점검하기.
대개 웹 애플리케이션은 클라이언트 서버 패턴이다.
옛날에는 거의 단일 서버(PHP, JSP, etc)에서 클라이언트 / 서버 애플리케이션을 실행했다.
하지만 근래에는 사용자 경험을 향상시키기 위해서 CSR(Client Side Rendering)이 나왔고, 그 다음엔 CSR 문제를 해결하기 위해 SSR(Server Side Rendering)이 나왔다.
SSR은 NextJS가 나오면서 옛날과는 다르게 렌더링만 담당하는 서버를 두고, HTML을 렌더링하기 위해 API 서버를 두는 방식으로 발전하였다.
그러므로 프론트엔드 개발자도, 서버 개발자도 지속적으로 인프라 레벨을 공부해야한다.


  단일 웹서비스 서버 구조
    
      서버에서...</summary>

  </entry>

</feed>


